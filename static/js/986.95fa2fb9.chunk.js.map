{"version":3,"file":"static/js/986.95fa2fb9.chunk.js","mappings":"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","sources":["api/api.js","pages/movie-details/MoviesDetails.styled.jsx","pages/movie-details/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst APIKEY = `a438b3320e0856ef78f03a44c35f6579`;\n\nconst getMoviesDay = async () => {\n  const data = await axios.get(\n    `trending/movie/day?api_key=${APIKEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getMoviesQuery = async query => {\n  const data = await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return data;\n};\n\nconst getMoviesDetails = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${APIKEY}&language=en-US`);\n  return data;\n};\n\nconst getMoviesCast = async id => {\n  const data = await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst getMoviesReviews = async id => {\n  const data = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst api = {\n  getMoviesDay,\n  getMoviesQuery,\n  getMoviesDetails,\n  getMoviesCast,\n  getMoviesReviews,\n};\n\nexport default api;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieDetail = styled.div`\n  padding-top: 40px;\n  display: flex;\n`;\n\nexport const MovieDetailsWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-left: 60px;\n`;\n\nexport const MovieDetailsTitle = styled.h2`\n  height: 100px;\n  min-height: 100px;\n  font-weight: 900;\n  font-size: 48px;\n`;\n\nexport const AditionalInfoTitle = styled.h2`\n  text-align: center;\n  font-weight: 900;\n  font-size: 48px;\n`;\n\nexport const AditionalInfoWrap = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 20px;\n`;\n\nexport const Score = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n`;\n\nexport const Overview = styled.p`\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n`;\nexport const Genres = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.5;\n  margin-bottom: 4px;\n  margin-top: 0;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 1.5;\n  margin-bottom: 4px;\n  margin-top: 0;\n  &:hover {\n    color: #fd5103;\n  }\n  &.active {\n    color: #fd5103;\n  }\n`;\n","import { Container } from 'pages/home/Home.styled';\nimport { useEffect, useState } from 'react';\nimport { useLocation, Link, useParams, Outlet } from 'react-router-dom';\nimport api from '../../api/api';\nimport {\n  MovieDetailsWrap,\n  MovieDetail,\n  MovieDetailsTitle,\n  AditionalInfoTitle,\n  AditionalInfoWrap,\n  Score,\n  Overview,\n  Genres,\n  StyledLink,\n} from './MoviesDetails.styled';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(\n    JSON.parse(localStorage.getItem(`movie-${movieId}`)) ?? []\n  );\n  const location = useLocation();\n  const goBackBtn = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const result = await api.getMoviesDetails(movieId);\n      setMovie(result.data);\n      // console.log(result.data);\n      localStorage.setItem(`movie-${movieId}`, JSON.stringify(result.data));\n    };\n    if (movieId) {\n      if (!localStorage.getItem(`movie-${movieId}`)) {\n        fetchMovie();\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Container>\n      <button type=\"button\" className=\"button\">\n        <Link to={goBackBtn}>Go Back</Link>\n      </button>\n      <MovieDetail>\n        <img\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movie.poster_path} `\n              : `https://picsum.photos/600/400?image=358`\n          }\n          alt={movie.title}\n          width={400}\n          height={600}\n        />\n        <MovieDetailsWrap>\n          {' '}\n          <MovieDetailsTitle>\n            {movie.title} ({new Date(movie.release_date).getFullYear()})\n          </MovieDetailsTitle>\n          <Score>User Score: {(movie.vote_average * 10).toFixed(0)}%</Score>\n          <h3>Overview</h3>\n          <Overview>{movie.overview}</Overview>\n          <h4>Genres</h4>\n          <ul>\n            {movie.genres\n              ? movie.genres.map(genres => {\n                  return (\n                    <li key={genres.id}>\n                      <Genres>{genres.name}</Genres>\n                    </li>\n                  );\n                })\n              : ''}\n          </ul>\n        </MovieDetailsWrap>\n      </MovieDetail>\n      <AditionalInfoTitle>Aditional information</AditionalInfoTitle>\n      <AditionalInfoWrap>\n        <StyledLink to={`/movies/${movieId}/cast`}>Cast</StyledLink>\n        <StyledLink to={`/movies/${movieId}/reviews`}>Review</StyledLink>\n      </AditionalInfoWrap>\n      <Outlet />\n    </Container>\n  );\n}\n"],"names":["axios","APIKEY","getMoviesDay","data","getMoviesQuery","query","getMoviesDetails","id","getMoviesCast","getMoviesReviews","api","MovieDetail","styled","MovieDetailsWrap","MovieDetailsTitle","AditionalInfoTitle","AditionalInfoWrap","Score","Overview","Genres","StyledLink","NavLink","MovieDetails","movieId","useParams","useState","JSON","parse","localStorage","getItem","movie","setMovie","goBackBtn","useLocation","state","from","useEffect","fetchMovie","result","setItem","stringify","type","className","to","src","poster_path","alt","title","width","height","Date","release_date","getFullYear","vote_average","toFixed","overview","genres","map","name"],"sourceRoot":""}