{"version":3,"file":"static/js/445.52306586.chunk.js","mappings":"8KAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAENC,EAAY,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCACaC,EADb,oBADA,cACbE,EADa,yBAIZA,GAJY,2CAAH,qDAOZC,EAAc,mCAAG,WAAMC,GAAN,uFACFL,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCI,EADtC,oDADE,cACfF,EADe,yBAIdA,GAJc,2CAAH,sDAOdG,EAAgB,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCN,EAAlC,oBADI,cACjBE,EADiB,yBAEhBA,GAFgB,2CAAH,sDAKhBK,EAAa,mCAAG,WAAMD,GAAN,uFACDP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADC,cACdE,EADc,yBAIbA,GAJa,2CAAH,sDAObM,EAAgB,mCAAG,WAAMF,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADI,cACjBE,EADiB,yBAIhBA,GAJgB,2CAAH,sDAOhBO,EAAM,CACVR,aAAAA,EACAE,eAAAA,EACAE,iBAAAA,EACAE,cAAAA,EACAC,iBAAAA,GAGF,K,uJCzCe,SAASE,IAAU,IAAD,EAC/B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOP,EAAP,KAAcQ,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,SACrC,GAA4BN,EAAAA,EAAAA,UAAQ,UAClCO,KAAKC,MAAMC,aAAaC,QAAb,iBAA+BL,YADR,QAC2B,IAD/D,eAAOM,EAAP,KAAeC,EAAf,MAIAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGACHhB,EAAAA,EAAAA,eAAmBL,GADhB,OAClBsB,EADkB,OAExBH,EAAUG,EAAOxB,KAAKyB,SACtBC,QAAQC,IAAIH,EAAOxB,KAAKyB,SACxBP,aAAaU,QAAb,iBACY1B,GACVc,KAAKa,UAAUL,EAAOxB,KAAKyB,UANL,2CAAH,qDAUnBvB,IACEgB,aAAaC,QAAb,iBAA+BjB,IACjCmB,EAAUL,KAAKC,MAAMC,aAAaC,QAAb,iBAA+BjB,MAEpDqB,IAIL,GAAE,CAACrB,KAEJoB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGACHhB,EAAAA,EAAAA,eAAmBO,GADhB,OAClBU,EADkB,OAExBH,EAAUG,EAAOxB,KAAKyB,SACtBC,QAAQC,IAAIH,EAAOxB,KAAKyB,SACxBP,aAAaU,QAAb,iBACYd,GACVE,KAAKa,UAAUL,EAAOxB,KAAKyB,UANL,2CAAH,qDASnBX,IAAgBI,aAAaC,QAAb,iBAA+BL,KACjDS,GAGH,GAAE,IAQH,OACE,UAAC,KAAD,YACE,0BACE,kBAAMO,SATS,SAAAC,GACnBA,EAAMC,iBACNtB,EAASqB,EAAME,OAAOC,YAAYC,OAClCtB,EAAgB,CAAEX,MAAO6B,EAAME,OAAOC,YAAYC,OACnD,EAKK,WACE,kBACEC,KAAK,cACLC,KAAK,OACLC,aAAa,MACbC,YAAY,mBAEd,mBAAQF,KAAK,SAAb,0BAGJ,wBACGjB,EAAOoB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOrC,EAAS,EAATA,GACpB,OACE,yBACE,UAAC,KAAD,CAAMsC,GAAE,UAAKtC,GAAMuC,MAAO,CAAEC,KAAK,WAAD,OAAahC,IAA7C,UACG6B,EAAO,QAFHrC,EAMZ,QAIR,C","sources":["api/api.js","pages/movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst APIKEY = `a438b3320e0856ef78f03a44c35f6579`;\n\nconst getMoviesDay = async () => {\n  const data = await axios.get(\n    `trending/movie/day?api_key=${APIKEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getMoviesQuery = async query => {\n  const data = await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return data;\n};\n\nconst getMoviesDetails = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${APIKEY}&language=en-US`);\n  return data;\n};\n\nconst getMoviesCast = async id => {\n  const data = await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst getMoviesReviews = async id => {\n  const data = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst api = {\n  getMoviesDay,\n  getMoviesQuery,\n  getMoviesDetails,\n  getMoviesCast,\n  getMoviesReviews,\n};\n\nexport default api;\n","import { Container } from 'pages/home/Home.styled';\nimport { useEffect, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport api from '../../api/api';\n\nexport default function Movies() {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n  const [movies, setMovies] = useState(\n    JSON.parse(localStorage.getItem(`search-${searchQuery}`)) ?? []\n  );\n\n  useEffect(() => {\n    const fetchMovieByQuery = async () => {\n      const result = await api.getMoviesQuery(query);\n      setMovies(result.data.results);\n      console.log(result.data.results);\n      localStorage.setItem(\n        `search-${query}`,\n        JSON.stringify(result.data.results)\n      );\n    };\n\n    if (query) {\n      if (localStorage.getItem(`search-${query}`)) {\n        setMovies(JSON.parse(localStorage.getItem(`search-${query}`)));\n      } else {\n        fetchMovieByQuery();\n      }\n    }\n    // eslint-disable-next-line\n  }, [query]);\n\n  useEffect(() => {\n    const fetchMovieByQuery = async () => {\n      const result = await api.getMoviesQuery(searchQuery);\n      setMovies(result.data.results);\n      console.log(result.data.results);\n      localStorage.setItem(\n        `search-${searchQuery}`,\n        JSON.stringify(result.data.results)\n      );\n    };\n    if (searchQuery && !localStorage.getItem(`search-${searchQuery}`)) {\n      fetchMovieByQuery();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setQuery(event.target.searchfield.value);\n    setSearchParams({ query: event.target.searchfield.value });\n  };\n\n  return (\n    <Container>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input\n            name=\"searchfield\"\n            type=\"text\"\n            autoComplete=\"off\"\n            placeholder=\"Search movies\"\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n      </div>\n      <ul>\n        {movies.map(({ title, id }) => {\n          return (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: `/movies?${searchParams}` }}>\n                {title}{' '}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </Container>\n  );\n}\n"],"names":["axios","APIKEY","getMoviesDay","data","getMoviesQuery","query","getMoviesDetails","id","getMoviesCast","getMoviesReviews","api","Movies","useState","setQuery","useSearchParams","searchParams","setSearchParams","searchQuery","get","JSON","parse","localStorage","getItem","movies","setMovies","useEffect","fetchMovieByQuery","result","results","console","log","setItem","stringify","onSubmit","event","preventDefault","target","searchfield","value","name","type","autoComplete","placeholder","map","title","to","state","from"],"sourceRoot":""}