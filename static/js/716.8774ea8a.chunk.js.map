{"version":3,"file":"static/js/716.8774ea8a.chunk.js","mappings":"8KAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAENC,EAAY,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCACaC,EADb,oBADA,cACbE,EADa,yBAIZA,GAJY,2CAAH,qDAOZC,EAAc,mCAAG,WAAMC,GAAN,uFACFL,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCI,EADtC,oDADE,cACfF,EADe,yBAIdA,GAJc,2CAAH,sDAOdG,EAAgB,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCN,EAAlC,oBADI,cACjBE,EADiB,yBAEhBA,GAFgB,2CAAH,sDAKhBK,EAAa,mCAAG,WAAMD,GAAN,uFACDP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADC,cACdE,EADc,yBAIbA,GAJa,2CAAH,sDAObM,EAAgB,mCAAG,WAAMF,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADI,cACjBE,EADiB,yBAIhBA,GAJgB,2CAAH,sDAOhBO,EAAM,CACVR,aAAAA,EACAE,eAAAA,EACAE,iBAAAA,EACAE,cAAAA,EACAC,iBAAAA,GAGF,K,gKCzCe,SAASE,IAAgB,IAAD,MAC7BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAQ,UAChCC,KAAKC,MAAMC,aAAaC,QAAb,gBAA8BN,YADT,QACwB,IAD1D,eAAOO,EAAP,KAAcC,EAAd,KAIMC,EAAS,qBADEC,EAAAA,EAAAA,MACUC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAiB1C,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGACIhB,EAAAA,EAAAA,iBAAqBE,GADzB,OACXe,EADW,OAEjBP,EAASO,EAAOxB,MAChByB,QAAQC,IAAIF,EAAOxB,MACnBc,aAAaa,QAAb,gBAA8BlB,GAAWG,KAAKgB,UAAUJ,EAAOxB,OAJ9C,2CAAH,qDAMZS,IACGK,aAAaC,QAAb,gBAA8BN,KACjCc,IAIL,GAAE,KAGD,UAAC,KAAD,YACE,mBAAQM,KAAK,SAAb,UACE,SAAC,KAAD,CAAMC,GAAIZ,EAAV,wBAEF,4BACE,gBACEa,IACEf,EAAMgB,YAAN,yCACsChB,EAAMgB,YAD5C,+CAIFC,IAAKjB,EAAMkB,SAEb,0BACGlB,EAAMkB,MADT,KACkB,IAAIC,KAAKnB,EAAMoB,cAAcC,cAD/C,QAGA,yCAAsC,GAArBrB,EAAMsB,cAAmBC,QAAQ,GAAlD,QACA,sCACA,uBAAIvB,EAAMwB,YACV,oCACA,wBACGxB,EAAMyB,OACHzB,EAAMyB,OAAOC,KAAI,SAAAD,GACf,OAAO,wBAAqBA,EAAOE,MAAnBF,EAAOrC,GACxB,IACD,SAGR,kDACA,4BACE,SAAC,KAAD,CAAM0B,GAAE,kBAAarB,EAAb,SAAR,mBACA,SAAC,KAAD,CAAMqB,GAAE,kBAAarB,EAAb,YAAR,wBAEF,SAAC,KAAD,MAGL,C","sources":["api/api.js","pages/movie-details/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst APIKEY = `a438b3320e0856ef78f03a44c35f6579`;\n\nconst getMoviesDay = async () => {\n  const data = await axios.get(\n    `trending/movie/day?api_key=${APIKEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getMoviesQuery = async query => {\n  const data = await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return data;\n};\n\nconst getMoviesDetails = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${APIKEY}&language=en-US`);\n  return data;\n};\n\nconst getMoviesCast = async id => {\n  const data = await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst getMoviesReviews = async id => {\n  const data = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst api = {\n  getMoviesDay,\n  getMoviesQuery,\n  getMoviesDetails,\n  getMoviesCast,\n  getMoviesReviews,\n};\n\nexport default api;\n","import { Container } from 'pages/home/Home.styled';\nimport { useEffect, useState } from 'react';\nimport { useLocation, Link, useParams, Outlet } from 'react-router-dom';\nimport api from '../../api/api';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(\n    JSON.parse(localStorage.getItem(`movie-${movieId}`)) ?? []\n  );\n  const location = useLocation();\n  const goBackBtn = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const result = await api.getMoviesDetails(movieId);\n      setMovie(result.data);\n      console.log(result.data);\n      localStorage.setItem(`movie-${movieId}`, JSON.stringify(result.data));\n    };\n    if (movieId) {\n      if (!localStorage.getItem(`movie-${movieId}`)) {\n        fetchMovie();\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Container>\n      <button type=\"button\">\n        <Link to={goBackBtn}>Go Back</Link>\n      </button>\n      <div>\n        <img\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movie.poster_path} `\n              : `https://picsum.photos/500/300?image=358`\n          }\n          alt={movie.title}\n        />\n        <h2>\n          {movie.title} ({new Date(movie.release_date).getFullYear()})\n        </h2>\n        <p>User Score: {(movie.vote_average * 10).toFixed(0)}%</p>\n        <h3>Overview</h3>\n        <p>{movie.overview}</p>\n        <h4>Genres</h4>\n        <ul>\n          {movie.genres\n            ? movie.genres.map(genres => {\n                return <li key={genres.id}>{genres.name}</li>;\n              })\n            : ''}\n        </ul>\n      </div>\n      <p>Aditional information</p>\n      <div>\n        <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n        <Link to={`/movies/${movieId}/reviews`}>Review</Link>\n      </div>\n      <Outlet />\n    </Container>\n  );\n}\n"],"names":["axios","APIKEY","getMoviesDay","data","getMoviesQuery","query","getMoviesDetails","id","getMoviesCast","getMoviesReviews","api","MovieDetails","movieId","useParams","useState","JSON","parse","localStorage","getItem","movie","setMovie","goBackBtn","useLocation","state","from","useEffect","fetchMovie","result","console","log","setItem","stringify","type","to","src","poster_path","alt","title","Date","release_date","getFullYear","vote_average","toFixed","overview","genres","map","name"],"sourceRoot":""}