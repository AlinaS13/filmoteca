{"version":3,"file":"static/js/390.b35a4f17.chunk.js","mappings":"8KAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAENC,EAAY,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCACaC,EADb,oBADA,cACbE,EADa,yBAIZA,GAJY,2CAAH,qDAOZC,EAAc,mCAAG,WAAMC,GAAN,uFACFL,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCI,EADtC,oDADE,cACfF,EADe,yBAIdA,GAJc,2CAAH,sDAOdG,EAAgB,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCN,EAAlC,oBADI,cACjBE,EADiB,yBAEhBA,GAFgB,2CAAH,sDAKhBK,EAAa,mCAAG,WAAMD,GAAN,uFACDP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADC,cACdE,EADc,yBAIbA,GAJa,2CAAH,sDAObM,EAAgB,mCAAG,WAAMF,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADI,cACjBE,EADiB,yBAIhBA,GAJgB,2CAAH,sDAOhBO,EAAM,CACVR,aAAAA,EACAE,eAAAA,EACAE,iBAAAA,EACAE,cAAAA,EACAC,iBAAAA,GAGF,K,+IC1Ce,SAASE,IAAQ,IAAD,EACrBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAQ,UAC9BC,KAAKC,MAAMC,aAAaC,QAAb,eAA6BN,YADV,QACyB,IADzD,eAAOO,EAAP,KAAaC,EAAb,KAiBA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGACKZ,EAAAA,EAAAA,cAAkBE,GADvB,OACVW,EADU,OAEhBH,EAAQG,EAAOpB,KAAKgB,MACpBK,QAAQC,IAAIF,EAAOpB,KAAKgB,MACxBF,aAAaS,QAAb,eAA6Bd,GAAWG,KAAKY,UAAUJ,EAAOpB,KAAKgB,OAJnD,2CAAH,qDAMVF,aAAaC,QAAb,eAA6BN,KAChCU,EAAUV,EAGb,GAAE,KAGD,wBACGO,EAAKS,KAAI,SAAAT,GACR,OACE,2BACE,gBACEU,IACEV,EAAKW,aAAL,0CACuCX,EAAKW,cAD5C,0CAIFC,IAAKZ,EAAKa,QAEZ,8BAAMb,EAAKa,SACX,uCAAeb,EAAKc,eAVbd,EAAKZ,GAajB,KAGN,C","sources":["api/api.js","components/cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst APIKEY = `a438b3320e0856ef78f03a44c35f6579`;\n\nconst getMoviesDay = async () => {\n  const data = await axios.get(\n    `trending/movie/day?api_key=${APIKEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getMoviesQuery = async query => {\n  const data = await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return data;\n};\n\nconst getMoviesDetails = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${APIKEY}&language=en-US`);\n  return data;\n};\n\nconst getMoviesCast = async id => {\n  const data = await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst getMoviesReviews = async id => {\n  const data = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst api = {\n  getMoviesDay,\n  getMoviesQuery,\n  getMoviesDetails,\n  getMoviesCast,\n  getMoviesReviews,\n};\n\nexport default api;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../api/api';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(\n    JSON.parse(localStorage.getItem(`cast-${movieId}`)) ?? []\n  );\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      const result = await api.getMoviesCast(movieId);\n      setCast(result.data.cast);\n      console.log(result.data.cast);\n      localStorage.setItem(`cast-${movieId}`, JSON.stringify(result.data.cast));\n    };\n    if (!localStorage.getItem(`cast-${movieId}`)) {\n      fetchCast(movieId);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ul>\n      {cast.map(cast => {\n        return (\n          <li key={cast.id}>\n            <img\n              src={\n                cast.profile_path\n                  ? `https://image.tmdb.org/t/p/w200/${cast.profile_path}`\n                  : `https://picsum.photos/200/300?image=259`\n              }\n              alt={cast.name}\n            />\n            <h2> {cast.name}</h2>\n            <p>Character: {cast.character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n"],"names":["axios","APIKEY","getMoviesDay","data","getMoviesQuery","query","getMoviesDetails","id","getMoviesCast","getMoviesReviews","api","Cast","movieId","useParams","useState","JSON","parse","localStorage","getItem","cast","setCast","useEffect","fetchCast","result","console","log","setItem","stringify","map","src","profile_path","alt","name","character"],"sourceRoot":""}