{"version":3,"file":"static/js/519.58641f2b.chunk.js","mappings":"8KAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAENC,EAAY,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCACaC,EADb,oBADA,cACbE,EADa,yBAIZA,GAJY,2CAAH,qDAOZC,EAAc,mCAAG,WAAMC,GAAN,uFACFL,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCI,EADtC,oDADE,cACfF,EADe,yBAIdA,GAJc,2CAAH,sDAOdG,EAAgB,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCN,EAAlC,oBADI,cACjBE,EADiB,yBAEhBA,GAFgB,2CAAH,sDAKhBK,EAAa,mCAAG,WAAMD,GAAN,uFACDP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADC,cACdE,EADc,yBAIbA,GAJa,2CAAH,sDAObM,EAAgB,mCAAG,WAAMF,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADI,cACjBE,EADiB,yBAIhBA,GAJgB,2CAAH,sDAOhBO,EAAM,CACVR,aAAAA,EACAE,eAAAA,EACAE,iBAAAA,EACAE,cAAAA,EACAC,iBAAAA,GAGF,K,kKC5CaE,EAAWC,EAAAA,GAAAA,GAAH,mQAYRC,EAAWD,EAAAA,GAAAA,GAAH,kLAMRE,EAAUF,EAAAA,GAAAA,IAAH,gMASPG,EAAYH,EAAAA,GAAAA,GAAH,wFAMTI,EAAWJ,EAAAA,GAAAA,EAAH,yQ,SCxBN,SAASK,IAAQ,IAAD,EACrBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAQ,UAC9BC,KAAKC,MAAMC,aAAaC,QAAb,eAA6BN,YADV,QACyB,IADzD,eAAOO,EAAP,KAAaC,EAAb,KAiBA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGACKlB,EAAAA,EAAAA,cAAkBQ,GADvB,OACVW,EADU,OAEhBH,EAAQG,EAAO1B,KAAKsB,MACpBK,QAAQC,IAAIF,EAAO1B,KAAKsB,MACxBF,aAAaS,QAAb,eAA6Bd,GAAWG,KAAKY,UAAUJ,EAAO1B,KAAKsB,OAJnD,2CAAH,qDAMVF,aAAaC,QAAb,eAA6BN,KAChCU,EAAUV,EAGb,GAAE,KAGD,SAACP,EAAD,UACGc,EAAKS,KAAI,SAAAT,GACR,OACE,UAACZ,EAAD,YACE,SAACC,EAAD,CACEqB,IACEV,EAAKW,aAAL,0CACuCX,EAAKW,cAD5C,0CAIFC,IAAKZ,EAAKa,QAEZ,UAACvB,EAAD,eAAaU,EAAKa,SAClB,UAACtB,EAAD,yBAAsBS,EAAKc,eAVdd,EAAKlB,GAavB,KAGN,C","sources":["api/api.js","components/cast/Cast.styled.jsx","components/cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst APIKEY = `a438b3320e0856ef78f03a44c35f6579`;\n\nconst getMoviesDay = async () => {\n  const data = await axios.get(\n    `trending/movie/day?api_key=${APIKEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getMoviesQuery = async query => {\n  const data = await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return data;\n};\n\nconst getMoviesDetails = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${APIKEY}&language=en-US`);\n  return data;\n};\n\nconst getMoviesCast = async id => {\n  const data = await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst getMoviesReviews = async id => {\n  const data = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst api = {\n  getMoviesDay,\n  getMoviesQuery,\n  getMoviesDetails,\n  getMoviesCast,\n  getMoviesReviews,\n};\n\nexport default api;\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const CastItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const CastImg = styled.img`\n  width: 100%;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\nexport const CastTitle = styled.h2`\n  text-align: center;\n  font-weight: 700;\n  font-size: 28px;\n`;\n\nexport const CastText = styled.p`\n  text-align: center;\n  margin-bottom: 4px;\n  color: #000;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 2;\n  letter-spacing: 0.06em;\n  @media screen and (min-width: 768px) {\n    font-weight: 600;\n    font-size: 16px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../api/api';\nimport {\n  CastImg,\n  CastItem,\n  CastList,\n  CastText,\n  CastTitle,\n} from './Cast.styled';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(\n    JSON.parse(localStorage.getItem(`cast-${movieId}`)) ?? []\n  );\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      const result = await api.getMoviesCast(movieId);\n      setCast(result.data.cast);\n      console.log(result.data.cast);\n      localStorage.setItem(`cast-${movieId}`, JSON.stringify(result.data.cast));\n    };\n    if (!localStorage.getItem(`cast-${movieId}`)) {\n      fetchCast(movieId);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <CastList>\n      {cast.map(cast => {\n        return (\n          <CastItem key={cast.id}>\n            <CastImg\n              src={\n                cast.profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${cast.profile_path}`\n                  : `https://picsum.photos/600/900?image=259`\n              }\n              alt={cast.name}\n            />\n            <CastTitle> {cast.name}</CastTitle>\n            <CastText>Character: {cast.character}</CastText>\n          </CastItem>\n        );\n      })}\n    </CastList>\n  );\n}\n"],"names":["axios","APIKEY","getMoviesDay","data","getMoviesQuery","query","getMoviesDetails","id","getMoviesCast","getMoviesReviews","api","CastList","styled","CastItem","CastImg","CastTitle","CastText","Cast","movieId","useParams","useState","JSON","parse","localStorage","getItem","cast","setCast","useEffect","fetchCast","result","console","log","setItem","stringify","map","src","profile_path","alt","name","character"],"sourceRoot":""}