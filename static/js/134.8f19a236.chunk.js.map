{"version":3,"file":"static/js/134.8f19a236.chunk.js","mappings":"8KAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAENC,EAAY,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCACaC,EADb,oBADA,cACbE,EADa,yBAIZA,GAJY,2CAAH,qDAOZC,EAAc,mCAAG,WAAMC,GAAN,uFACFL,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCI,EADtC,oDADE,cACfF,EADe,yBAIdA,GAJc,2CAAH,sDAOdG,EAAgB,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCN,EAAlC,oBADI,cACjBE,EADiB,yBAEhBA,GAFgB,2CAAH,sDAKhBK,EAAa,mCAAG,WAAMD,GAAN,uFACDP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADC,cACdE,EADc,yBAIbA,GAJa,2CAAH,sDAObM,EAAgB,mCAAG,WAAMF,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADI,cACjBE,EADiB,yBAIhBA,GAJgB,2CAAH,sDAOhBO,EAAM,CACVR,aAAAA,EACAE,eAAAA,EACAE,iBAAAA,EACAE,cAAAA,EACAC,iBAAAA,GAGF,K,8ICzCe,SAASE,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOP,EAAP,KAAcU,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,UAErCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGACHZ,EAAAA,EAAAA,eAAmBL,GADhB,OAClBkB,EADkB,OAExBT,EAAUS,EAAOpB,KAAKqB,SACtBC,QAAQC,IAAIH,EAAOpB,KAAKqB,SAHA,2CAAH,qDAKnBnB,GACFiB,GAEH,GAAE,CAACjB,KAEJgB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGACHZ,EAAAA,EAAAA,eAAmBS,GADhB,OAClBI,EADkB,OAExBT,EAAUS,EAAOpB,KAAKqB,SACtBC,QAAQC,IAAIH,EAAOpB,KAAKqB,SAHA,2CAAH,qDAKnBL,GACFG,GAGH,GAAE,IAQH,OACE,4BACE,0BACE,kBAAMK,SATS,SAAAC,GACnBA,EAAMC,iBACNd,EAASa,EAAME,OAAOC,YAAYC,OAClCd,EAAgB,CAAEb,MAAOuB,EAAME,OAAOC,YAAYC,OACnD,EAKK,WACE,kBACEC,KAAK,cACLC,KAAK,OACLC,aAAa,MACbC,YAAY,mBAEd,mBAAQF,KAAK,SAAb,0BAGJ,wBACGrB,EAAOwB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAO/B,EAAS,EAATA,GACpB,OACE,yBACE,UAAC,KAAD,CAAMgC,GAAE,UAAKhC,GAAMiC,MAAO,CAAEC,KAAK,WAAD,OAAaxB,IAA7C,UACGqB,EAAO,QAFH/B,EAMZ,QAIR,C","sources":["api/api.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst APIKEY = `a438b3320e0856ef78f03a44c35f6579`;\n\nconst getMoviesDay = async () => {\n  const data = await axios.get(\n    `trending/movie/day?api_key=${APIKEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getMoviesQuery = async query => {\n  const data = await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return data;\n};\n\nconst getMoviesDetails = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${APIKEY}&language=en-US`);\n  return data;\n};\n\nconst getMoviesCast = async id => {\n  const data = await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst getMoviesReviews = async id => {\n  const data = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst api = {\n  getMoviesDay,\n  getMoviesQuery,\n  getMoviesDetails,\n  getMoviesCast,\n  getMoviesReviews,\n};\n\nexport default api;\n","// import MovieDetails from './MovieDetails';\nimport { useEffect, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport api from '../api/api';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchMovieByQuery = async () => {\n      const result = await api.getMoviesQuery(query);\n      setMovies(result.data.results);\n      console.log(result.data.results);\n    };\n    if (query) {\n      fetchMovieByQuery();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    const fetchMovieByQuery = async () => {\n      const result = await api.getMoviesQuery(searchQuery);\n      setMovies(result.data.results);\n      console.log(result.data.results);\n    };\n    if (searchQuery) {\n      fetchMovieByQuery();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setQuery(event.target.searchfield.value);\n    setSearchParams({ query: event.target.searchfield.value });\n  };\n\n  return (\n    <div>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input\n            name=\"searchfield\"\n            type=\"text\"\n            autoComplete=\"off\"\n            placeholder=\"Search movies\"\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n      </div>\n      <ul>\n        {movies.map(({ title, id }) => {\n          return (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: `/movies?${searchParams}` }}>\n                {title}{' '}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n"],"names":["axios","APIKEY","getMoviesDay","data","getMoviesQuery","query","getMoviesDetails","id","getMoviesCast","getMoviesReviews","api","Movies","useState","movies","setMovies","setQuery","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","fetchMovieByQuery","result","results","console","log","onSubmit","event","preventDefault","target","searchfield","value","name","type","autoComplete","placeholder","map","title","to","state","from"],"sourceRoot":""}