{"version":3,"file":"static/js/180.51c5319a.chunk.js","mappings":"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","sources":["api/api.js","pages/movies/Movies.styled.jsx","pages/movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst APIKEY = `a438b3320e0856ef78f03a44c35f6579`;\n\nconst getMoviesDay = async () => {\n  const data = await axios.get(\n    `trending/movie/day?api_key=${APIKEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getMoviesQuery = async query => {\n  const data = await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return data;\n};\n\nconst getMoviesDetails = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${APIKEY}&language=en-US`);\n  return data;\n};\n\nconst getMoviesCast = async id => {\n  const data = await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst getMoviesReviews = async id => {\n  const data = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst api = {\n  getMoviesDay,\n  getMoviesQuery,\n  getMoviesDetails,\n  getMoviesCast,\n  getMoviesReviews,\n};\n\nexport default api;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const SearchWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const SearchForm = styled.form`\n  margin-top: 40px;\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  border-bottom: 2px solid #fd5103;\n  margin-bottom: 40px;\n  /* overflow: hidden; */\n`;\n\nexport const Input = styled.input`\n  background-color: transparent;\n  font-size: 20px;\n  border: none;\n  padding: 10px;\n  outline: none;\n\n  &:-webkit-autofill {\n    box-shadow: 0 0 0 30px #fff inset !important;\n  }\n  &:-webkit-autofill:hover {\n    box-shadow: 0 0 0 30px #fff inset !important;\n  }\n  &:-webkit-autofill:focus {\n    box-shadow: 0 0 0 30px #fff inset !important;\n  }\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const MoviesList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MoviesItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const MoviesImg = styled.img`\n  width: 100%;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const MoviesTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 4px;\n  color: #000;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 2;\n  letter-spacing: 0.06em;\n  height: 100px;\n  @media screen and (min-width: 768px) {\n    font-weight: 600;\n    font-size: 18px;\n  }\n`;\n\nexport const LinkStyled = styled(NavLink)`\n  display: block;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\n","import { Container } from 'pages/home/Home.styled';\nimport { useEffect, useState } from 'react';\nimport { NavLink, useSearchParams } from 'react-router-dom';\nimport api from '../../api/api';\nimport {\n  Input,\n  MoviesImg,\n  MoviesItem,\n  MoviesList,\n  MoviesTitle,\n  SearchForm,\n  SearchWrap,\n} from './Movies.styled';\n\nexport default function Movies() {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n  const [movies, setMovies] = useState(\n    JSON.parse(sessionStorage.getItem(`search-${searchQuery}`)) ?? []\n  );\n\n  useEffect(() => {\n    const fetchMovieByQuery = async () => {\n      const result = await api.getMoviesQuery(query);\n      setMovies(result.data.results);\n      // console.log(result.data.results);\n      sessionStorage.setItem(\n        `search-${query}`,\n        JSON.stringify(result.data.results)\n      );\n    };\n\n    if (query) {\n      if (sessionStorage.getItem(`search-${query}`)) {\n        setMovies(JSON.parse(sessionStorage.getItem(`search-${query}`)));\n      } else {\n        fetchMovieByQuery();\n      }\n    }\n    // eslint-disable-next-line\n  }, [query]);\n\n  useEffect(() => {\n    const fetchMovieByQuery = async () => {\n      const result = await api.getMoviesQuery(searchQuery);\n      setMovies(result.data.results);\n      // console.log(result.data.results);\n      sessionStorage.setItem(\n        `search-${searchQuery}`,\n        JSON.stringify(result.data.results)\n      );\n    };\n    if (searchQuery && !sessionStorage.getItem(`search-${searchQuery}`)) {\n      fetchMovieByQuery();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setQuery(event.target.searchfield.value);\n    setSearchParams({ query: event.target.searchfield.value });\n  };\n\n  return (\n    <Container>\n      <SearchWrap>\n        <SearchForm onSubmit={handleSubmit}>\n          <Input\n            name=\"searchfield\"\n            type=\"text\"\n            autoComplete=\"off\"\n            placeholder=\"Search movies\"\n          />\n          <button type=\"submit\" className=\"button\">\n            Search\n          </button>\n        </SearchForm>\n      </SearchWrap>\n      <MoviesList>\n        {movies.map(({ title, id, poster_path }) => {\n          return (\n            <MoviesItem key={id}>\n              <NavLink to={`${id}`} state={{ from: `/movies?${searchParams}` }}>\n                <MoviesImg\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500${poster_path} `\n                      : `https://picsum.photos/500/300?image=358`\n                  }\n                  alt={title}\n                  width={200}\n                  height={250}\n                />\n                <MoviesTitle> {title} </MoviesTitle>\n              </NavLink>\n            </MoviesItem>\n          );\n        })}\n      </MoviesList>\n    </Container>\n  );\n}\n"],"names":["axios","APIKEY","getMoviesDay","data","getMoviesQuery","query","getMoviesDetails","id","getMoviesCast","getMoviesReviews","api","SearchWrap","styled","SearchForm","Input","MoviesList","MoviesItem","MoviesImg","MoviesTitle","NavLink","Movies","useState","setQuery","useSearchParams","searchParams","setSearchParams","searchQuery","get","JSON","parse","sessionStorage","getItem","movies","setMovies","useEffect","fetchMovieByQuery","result","results","setItem","stringify","onSubmit","event","preventDefault","target","searchfield","value","name","type","autoComplete","placeholder","className","map","title","poster_path","to","state","from","src","alt","width","height"],"sourceRoot":""}