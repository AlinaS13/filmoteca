{"version":3,"file":"static/js/769.0227bc86.chunk.js","mappings":"8KAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAENC,EAAY,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCACaC,EADb,oBADA,cACbE,EADa,yBAIZA,GAJY,2CAAH,qDAOZC,EAAc,mCAAG,WAAMC,GAAN,uFACFL,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCI,EADtC,oDADE,cACfF,EADe,yBAIdA,GAJc,2CAAH,sDAOdG,EAAgB,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCN,EAAlC,oBADI,cACjBE,EADiB,yBAEhBA,GAFgB,2CAAH,sDAKhBK,EAAa,mCAAG,WAAMD,GAAN,uFACDP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADC,cACdE,EADc,yBAIbA,GAJa,2CAAH,sDAObM,EAAgB,mCAAG,WAAMF,GAAN,uFACJP,EAAAA,EAAAA,IAAA,iBACPO,EADO,4BACeN,EADf,2BADI,cACjBE,EADiB,yBAIhBA,GAJgB,2CAAH,sDAOhBO,EAAM,CACVR,aAAAA,EACAE,eAAAA,EACAE,iBAAAA,EACAE,cAAAA,EACAC,iBAAAA,GAGF,K,4JC5CaE,EAAcC,EAAAA,GAAAA,EAAH,6NAYXC,EAAiBD,EAAAA,GAAAA,GAAH,4F,SCTZ,SAASE,IAAW,IAAD,EACxBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAQ,UACpCC,KAAKC,MAAMC,aAAaC,QAAb,kBAAgCN,YADP,QACsB,IAD5D,eAAOO,EAAP,KAAgBC,EAAhB,KAqBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGACEf,EAAAA,EAAAA,iBAAqBK,GADvB,OACbW,EADa,OAEnBH,EAAWG,EAAOvB,KAAKwB,SACvBC,QAAQC,IAAIH,EAAOvB,KAAKwB,SACxBP,aAAaU,QAAb,kBACaf,GACXG,KAAKa,UAAUL,EAAOvB,KAAKwB,UANV,2CAAH,qDASbP,aAAaC,QAAb,kBAAgCN,KACnCU,EAAaV,EAIhB,GAAE,KAGD,wBACGO,EAAQU,OACPV,EAAQW,KAAI,SAAAC,GAAM,OAChB,2BACE,qCAAaA,EAAOC,WACpB,SAACxB,EAAD,UAAcuB,EAAOE,YAFdF,EAAO3B,GADA,KAOlB,SAACM,EAAD,yDAMP,C","sources":["api/api.js","components/reviews/Reviews.styled.jsx","components/reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst APIKEY = `a438b3320e0856ef78f03a44c35f6579`;\n\nconst getMoviesDay = async () => {\n  const data = await axios.get(\n    `trending/movie/day?api_key=${APIKEY}&language=en-US`\n  );\n  return data;\n};\n\nconst getMoviesQuery = async query => {\n  const data = await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return data;\n};\n\nconst getMoviesDetails = async id => {\n  const data = await axios.get(`/movie/${id}?api_key=${APIKEY}&language=en-US`);\n  return data;\n};\n\nconst getMoviesCast = async id => {\n  const data = await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst getMoviesReviews = async id => {\n  const data = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nconst api = {\n  getMoviesDay,\n  getMoviesQuery,\n  getMoviesDetails,\n  getMoviesCast,\n  getMoviesReviews,\n};\n\nexport default api;\n","import styled from 'styled-components';\n\nexport const ReviewsText = styled.p`\n  color: #000;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: 0.02em;\n  @media screen and (min-width: 768px) {\n    font-weight: 500;\n    font-size: 16px;\n  }\n`;\n\nexport const ReviewsMessage = styled.h2`\n  text-align: center;\n  margin-top: 35px;\n  margin-bottom: 35px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../api/api';\nimport { ReviewsText, ReviewsMessage } from './Reviews.styled';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(\n    JSON.parse(localStorage.getItem(`reviews-${movieId}`)) ?? []\n  );\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const result = await api.getMoviesReviews(movieId);\n      setReviews(result.data.results);\n      console.log(result.data.results);\n      localStorage.setItem(\n        `reviews-${movieId}`,\n        JSON.stringify(result.data.results)\n      );\n    };\n    if (!localStorage.getItem(`reviews-${movieId}`)) {\n      fetchReviews(movieId);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ul>\n      {reviews.length ? (\n        reviews.map(review => (\n          <li key={review.id}>\n            <h2>Author: {review.author}</h2>\n            <ReviewsText>{review.content}</ReviewsText>\n          </li>\n        ))\n      ) : (\n        <ReviewsMessage>\n          We don't have any reviews for this movie.\n        </ReviewsMessage>\n      )}\n    </ul>\n  );\n}\n"],"names":["axios","APIKEY","getMoviesDay","data","getMoviesQuery","query","getMoviesDetails","id","getMoviesCast","getMoviesReviews","api","ReviewsText","styled","ReviewsMessage","Reviews","movieId","useParams","useState","JSON","parse","localStorage","getItem","reviews","setReviews","useEffect","fetchReviews","result","results","console","log","setItem","stringify","length","map","review","author","content"],"sourceRoot":""}